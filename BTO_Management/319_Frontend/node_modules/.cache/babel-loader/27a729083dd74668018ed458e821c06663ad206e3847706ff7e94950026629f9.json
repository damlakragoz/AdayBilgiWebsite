{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\AdayBilgi_CS319_\\\\BTO_Management\\\\319_Frontend\\\\src\\\\authorization\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../mainpage/MainPage.css';\n// Import your protected page\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [loginData, setLoginData] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState(''); // State to store error message\n  const navigate = useNavigate();\n  useEffect(() => {\n    // localStorage.removeItem('userToken');\n    //sessionStorage.removeItem('userToken');\n\n    //console.log(\"use effect called\");\n    // No need to clear tokens here\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setLoginData({\n      ...loginData,\n      [name]: value\n    });\n  };\n  axios.defaults.baseURL = 'http://localhost:8081';\n  const handleLogin = async e => {\n    e.preventDefault();\n    setError(''); // Clear any existing error messages\n\n    try {\n      // Send a POST request to the backend login endpoint\n      const response = await axios.post('/api/auth/login', {\n        username: loginData.username,\n        // Assuming the backend expects 'username' instead of 'email'\n        password: loginData.password\n      });\n      const roleResponse = await axios.post('/api/auth/user-role', {\n        username: loginData.username,\n        // Assuming the backend expects 'username' instead of 'email'\n        password: loginData.password\n      });\n      const role = roleResponse.data;\n\n      // If login is successful, store the JWT token in localStorage\n      if (response.status === 200 && response.data.token) {\n        const token = typeof response.data === 'string' ? response.data : response.data.token;\n        const username = response.data.username;\n\n        // Store the JWT token and username in localStorage\n        localStorage.setItem('userToken', token);\n        localStorage.setItem('username', loginData.username); // Save the username\n        localStorage.setItem('role', role);\n\n        //                axios.defaults.headers.common['Authorization'] = Bearer ${token}; // Set token for future requests\n\n        // Log for debugging\n        console.log('Token stored in localStorage:', token);\n        console.log('Username stored in localStorage:', loginData.username);\n        console.log('Role:', role);\n\n        // Navigate based on the user's role\n        switch (role) {\n          case 'Coordinator':\n            navigate('/coordinator-homepage');\n            console.log('COORDINATOR to applications page');\n            break;\n          case 'counselor':\n            //navigate('/counselor-dashboard');\n            break;\n          case 'tourGuide':\n            navigate('/applications');\n            break;\n          default:\n            navigate('/applications'); // Fallback if the role is unknown\n            break;\n        }\n      } else {\n        setError('Login failed: no token provided');\n      }\n    } catch (err) {\n      console.error('Login failed:', err);\n      setError('Invalid username or password'); // Set error message if login fails\n    }\n  };\n  const handleLogout = () => {\n    // Clear tokens and user-related data\n    localStorage.removeItem('userToken');\n    localStorage.removeItem('username');\n    sessionStorage.removeItem('userToken'); // In case it's stored here too\n\n    // Navigate the user to the login page\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Explore Our Campus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Discover the beauty and facilities of our state-of-the-art campus through our guided tours.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"Kullan\\u0131c\\u0131 ad\\u0131 girin\",\n          value: loginData.username,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"\\u015Eifrenizi girin\",\n          value: loginData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Don't have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"signup-button\",\n          onClick: () => navigate('/signup'),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"main-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\xA9 2023 Bilkent University. All rights reserved.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"tDRg9bdvRwQ9LrMgZmV2lywCoW8=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","BrowserRouter","Router","Routes","Route","Navigate","axios","jsxDEV","_jsxDEV","LoginPage","_s","loginData","setLoginData","username","password","error","setError","navigate","handleChange","e","name","value","target","defaults","baseURL","handleLogin","preventDefault","response","post","roleResponse","role","data","status","token","localStorage","setItem","console","log","err","handleLogout","removeItem","sessionStorage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/GitHub/AdayBilgi_CS319_/BTO_Management/319_Frontend/src/authorization/LoginPage.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useNavigate, BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../mainpage/MainPage.css';\r\n // Import your protected page\r\n\r\nconst LoginPage = () => {\r\n    const [loginData, setLoginData] = useState({\r\n        username: '',\r\n        password: '',\r\n    });\r\n    const [error, setError] = useState(''); // State to store error message\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n       // localStorage.removeItem('userToken');\r\n        //sessionStorage.removeItem('userToken');\r\n\r\n        //console.log(\"use effect called\");\r\n        // No need to clear tokens here\r\n    }, []);\r\n\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setLoginData({\r\n            ...loginData,\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    axios.defaults.baseURL = 'http://localhost:8081';\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        setError(''); // Clear any existing error messages\r\n\r\n        try {\r\n            // Send a POST request to the backend login endpoint\r\n            const response = await axios.post('/api/auth/login', {\r\n                username: loginData.username,  // Assuming the backend expects 'username' instead of 'email'\r\n                password: loginData.password,\r\n            });\r\n\r\n            const roleResponse = await axios.post('/api/auth/user-role', {\r\n                username: loginData.username,  // Assuming the backend expects 'username' instead of 'email'\r\n                password: loginData.password,\r\n            });\r\n            const role = roleResponse.data;\r\n\r\n            // If login is successful, store the JWT token in localStorage\r\n            if (response.status === 200 && response.data.token) {\r\n                const token = typeof response.data === 'string' ? response.data : response.data.token;\r\n                const username = response.data.username;\r\n\r\n                // Store the JWT token and username in localStorage\r\n                localStorage.setItem('userToken', token);\r\n                localStorage.setItem('username', loginData.username); // Save the username\r\n                localStorage.setItem('role', role);\r\n\r\n//                axios.defaults.headers.common['Authorization'] = Bearer ${token}; // Set token for future requests\r\n\r\n                // Log for debugging\r\n                console.log('Token stored in localStorage:', token);\r\n                console.log('Username stored in localStorage:', loginData.username);\r\n                console.log('Role:', role);\r\n\r\n                 // Navigate based on the user's role\r\n                switch (role) {\r\n                    case 'Coordinator':\r\n                        navigate('/coordinator-homepage');\r\n                        console.log('COORDINATOR to applications page');\r\n                        break;\r\n                    case 'counselor':\r\n                        //navigate('/counselor-dashboard');\r\n                        break;\r\n                    case 'tourGuide':\r\n                        navigate('/applications');\r\n                        break;\r\n                    default:\r\n                        navigate('/applications'); // Fallback if the role is unknown\r\n                        break;\r\n                }\r\n            } else {\r\n                setError('Login failed: no token provided');\r\n            }\r\n        } catch (err) {\r\n            console.error('Login failed:', err);\r\n            setError('Invalid username or password'); // Set error message if login fails\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        // Clear tokens and user-related data\r\n        localStorage.removeItem('userToken');\r\n        localStorage.removeItem('username');\r\n        sessionStorage.removeItem('userToken'); // In case it's stored here too\r\n\r\n        // Navigate the user to the login page\r\n        navigate('/');\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <main className=\"main-content\">\r\n                <h2>Explore Our Campus</h2>\r\n                <p>Discover the beauty and facilities of our state-of-the-art campus through our guided tours.</p>\r\n            </main>\r\n\r\n            {/* Login Section */}\r\n            <div className=\"login-container\">\r\n                <form onSubmit={handleLogin} className=\"login-form\">\r\n                    <label>Email</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"username\"\r\n                        placeholder=\"Kullanıcı adı girin\"\r\n                        value={loginData.username}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <label>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        placeholder=\"Şifrenizi girin\"\r\n                        value={loginData.password}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                    <button type=\"submit\" className=\"login-button\">\r\n                        Login\r\n                    </button>\r\n                </form>\r\n\r\n                {/* Add the Sign Up button here */}\r\n                <div className=\"signup-container\">\r\n                    <p>Don't have an account?</p>\r\n                    <button className=\"signup-button\" onClick={() => navigate('/signup')}>\r\n                        Sign Up\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <footer className=\"main-footer\">\r\n                <p>© 2023 Bilkent University. All rights reserved.</p>\r\n            </footer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}