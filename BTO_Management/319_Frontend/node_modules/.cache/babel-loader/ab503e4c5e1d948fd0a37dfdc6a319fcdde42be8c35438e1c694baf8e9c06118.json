{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yigit\\\\IdeaProjects\\\\AdayBilgi_CS319_3\\\\BTO_Management\\\\319_Frontend\\\\src\\\\tourguidepages\\\\TourGuidePuantage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TourGuideNavbar from './TourGuideNavbar';\nimport './TourGuidePuantage.css';\nimport PuantageTable from '../common/PuantageTable';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TourGuidePuantage = () => {\n  _s();\n  const [newActivity, setNewActivity] = useState({\n    date: '',\n    hoursWorked: ''\n  });\n  const [activities, setActivities] = useState([]);\n  const [tourGuides, setTourGuides] = useState([]);\n\n  // Fetch the list of tour guides and their total hours worked\n  const fetchTourGuides = async () => {\n    try {\n      const token = localStorage.getItem(\"userToken\");\n      if (!token) {\n        alert(\"Authorization token missing. Please log in.\");\n        return;\n      }\n\n      // Fetch tour guides and their total hours worked from backend\n      const response = await axios.get('http://localhost:8081/api/tourguide/getAll', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        setTourGuides(response.data); // Set the list of tour guides with their total hours worked\n      } else {\n        alert(\"Error fetching tour guides data.\");\n      }\n    } catch (error) {\n      console.error(\"Error fetching tour guides:\", error);\n      alert(\"Failed to load tour guides. Please try again later.\");\n    }\n  };\n  useEffect(() => {\n    fetchTourGuides(); // Fetch the initial tour guide data\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Ensure the value is valid (no DOM references)\n    if (name === \"hoursWorked\" && isNaN(value)) {\n      alert(\"Please enter a valid number for hours worked.\");\n      return;\n    }\n\n    // Update state with valid data\n    setNewActivity(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const hours = parseFloat(newActivity.hoursWorked);\n    if (hours <= 0) {\n      alert(\"Please enter a valid number of hours worked (greater than 0).\");\n      return;\n    }\n    if (hours % 0.5 !== 0) {\n      alert(\"Please enter hours worked in increments of 0.5 (e.g., 0.5, 1, 1.5, etc.).\");\n      return;\n    }\n    const userName = \"Yuyu Yokonova\"; // Example username\n\n    // Add the new activity to the activities list\n    setActivities(prevActivities => [...prevActivities, {\n      user: userName,\n      date: newActivity.date,\n      activity: newActivity.hoursWorked\n    }]);\n\n    // Log the values before sending to ensure there are no circular references\n    console.log('Submitting new activity:', newActivity);\n\n    // Send the update to the backend\n    try {\n      const token = localStorage.getItem(\"userToken\");\n      const response = await axios.put(`http://localhost:8081/api/tourguide/updateWorkHours`, {\n        userName,\n        // Send the userName (email or identifier of the tour guide)\n        hoursWorked // Send the hours worked for this activity\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.status === 200) {\n        alert(\"Work hours updated successfully!\");\n        // After updating the work hours, re-fetch the tour guides to update the frontend data\n        fetchTourGuides();\n      } else {\n        alert(\"Failed to update work hours.\");\n      }\n    } catch (error) {\n      console.error(\"Error updating work hours:\", error);\n      alert(\"Error updating work hours. Please try again later.\");\n    }\n\n    // Reset the form after submission\n    setNewActivity({\n      date: '',\n      hoursWorked: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tourguide-puantage\",\n    children: [/*#__PURE__*/_jsxDEV(TourGuideNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PuantageTable, {\n      activities: activities,\n      users: tourGuides\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"activity-form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Submit Your Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"activity-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"Activity Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"date\",\n            value: newActivity.date,\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"hoursWorked\",\n            children: \"Hours Worked:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"hoursWorked\",\n            name: \"hoursWorked\",\n            value: newActivity.hoursWorked,\n            onChange: handleChange,\n            min: \"0.5\",\n            step: \"0.5\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Activity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(TourGuidePuantage, \"4wa8+3yVCOf6V3PAOQH9eSykBGw=\");\n_c = TourGuidePuantage;\nexport default TourGuidePuantage;\nvar _c;\n$RefreshReg$(_c, \"TourGuidePuantage\");","map":{"version":3,"names":["React","useState","useEffect","TourGuideNavbar","PuantageTable","axios","jsxDEV","_jsxDEV","TourGuidePuantage","_s","newActivity","setNewActivity","date","hoursWorked","activities","setActivities","tourGuides","setTourGuides","fetchTourGuides","token","localStorage","getItem","alert","response","get","headers","Authorization","status","data","error","console","handleChange","e","name","value","target","isNaN","prevState","handleSubmit","preventDefault","hours","parseFloat","userName","prevActivities","user","activity","log","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","users","onSubmit","htmlFor","type","id","onChange","required","min","step","_c","$RefreshReg$"],"sources":["C:/Users/yigit/IdeaProjects/AdayBilgi_CS319_3/BTO_Management/319_Frontend/src/tourguidepages/TourGuidePuantage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TourGuideNavbar from './TourGuideNavbar';\r\nimport './TourGuidePuantage.css';\r\nimport PuantageTable from '../common/PuantageTable';\r\nimport axios from 'axios';\r\n\r\nconst TourGuidePuantage = () => {\r\n  const [newActivity, setNewActivity] = useState({\r\n    date: '',\r\n    hoursWorked: '',\r\n  });\r\n\r\n  const [activities, setActivities] = useState([]);\r\n  const [tourGuides, setTourGuides] = useState([]);\r\n\r\n  // Fetch the list of tour guides and their total hours worked\r\n  const fetchTourGuides = async () => {\r\n    try {\r\n      const token = localStorage.getItem(\"userToken\");\r\n      if (!token) {\r\n        alert(\"Authorization token missing. Please log in.\");\r\n        return;\r\n      }\r\n\r\n      // Fetch tour guides and their total hours worked from backend\r\n      const response = await axios.get('http://localhost:8081/api/tourguide/getAll', {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setTourGuides(response.data); // Set the list of tour guides with their total hours worked\r\n      } else {\r\n        alert(\"Error fetching tour guides data.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching tour guides:\", error);\r\n      alert(\"Failed to load tour guides. Please try again later.\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTourGuides(); // Fetch the initial tour guide data\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // Ensure the value is valid (no DOM references)\r\n    if (name === \"hoursWorked\" && isNaN(value)) {\r\n      alert(\"Please enter a valid number for hours worked.\");\r\n      return;\r\n    }\r\n\r\n    // Update state with valid data\r\n    setNewActivity((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const hours = parseFloat(newActivity.hoursWorked);\r\n    if (hours <= 0) {\r\n      alert(\"Please enter a valid number of hours worked (greater than 0).\");\r\n      return;\r\n    }\r\n    if (hours % 0.5 !== 0) {\r\n      alert(\"Please enter hours worked in increments of 0.5 (e.g., 0.5, 1, 1.5, etc.).\");\r\n      return;\r\n    }\r\n\r\n    const userName = \"Yuyu Yokonova\"; // Example username\r\n\r\n    // Add the new activity to the activities list\r\n    setActivities(prevActivities => [\r\n      ...prevActivities,\r\n      { user: userName, date: newActivity.date, activity: newActivity.hoursWorked },\r\n    ]);\r\n\r\n    // Log the values before sending to ensure there are no circular references\r\n    console.log('Submitting new activity:', newActivity);\r\n\r\n    // Send the update to the backend\r\n    try {\r\n      const token = localStorage.getItem(\"userToken\");\r\n      const response = await axios.put(\r\n        `http://localhost:8081/api/tourguide/updateWorkHours`,\r\n        {\r\n          userName,      // Send the userName (email or identifier of the tour guide)\r\n          hoursWorked,   // Send the hours worked for this activity\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200) {\r\n        alert(\"Work hours updated successfully!\");\r\n        // After updating the work hours, re-fetch the tour guides to update the frontend data\r\n        fetchTourGuides();\r\n      } else {\r\n        alert(\"Failed to update work hours.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error updating work hours:\", error);\r\n      alert(\"Error updating work hours. Please try again later.\");\r\n    }\r\n\r\n    // Reset the form after submission\r\n    setNewActivity({ date: '', hoursWorked: '' });\r\n  };\r\n\r\n  return (\r\n    <div className=\"tourguide-puantage\">\r\n      <TourGuideNavbar />\r\n      <PuantageTable activities={activities} users={tourGuides} />\r\n\r\n      {/* Activity Submission Form */}\r\n      <div className=\"activity-form-container\">\r\n        <h3>Submit Your Activity</h3>\r\n        <form onSubmit={handleSubmit} className=\"activity-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"date\">Activity Date:</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"date\"\r\n              name=\"date\"\r\n              value={newActivity.date}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"hoursWorked\">Hours Worked:</label>\r\n            <input\r\n              type=\"number\"\r\n              id=\"hoursWorked\"\r\n              name=\"hoursWorked\"\r\n              value={newActivity.hoursWorked}\r\n              onChange={handleChange}\r\n              min=\"0.5\"\r\n              step=\"0.5\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <button type=\"submit\">Submit Activity</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TourGuidePuantage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}