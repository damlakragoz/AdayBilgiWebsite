{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yigit\\\\IdeaProjects\\\\AdayBilgi_CS319_3\\\\BTO_Management\\\\319_Frontend\\\\src\\\\common\\\\PuantageTable.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { format, getDaysInMonth } from \"date-fns\";\nimport { tr } from \"date-fns/locale\"; // Import Turkish locale\nimport \"./PuantageTable.css\"; // Add custom styles\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PuantageTable = ({\n  activities,\n  users\n}) => {\n  _s();\n  const [selectedMonth, setSelectedMonth] = React.useState(new Date()); // Current month\n\n  const daysInMonth = getDaysInMonth(selectedMonth); // Get total days in the month\n  const formatDate = date => format(date, \"yyyy-MM-dd\"); // Format date to compare\n\n  // Function to group activities by date and sum hours worked\n  const groupActivitiesByDate = activities => {\n    return activities.reduce((grouped, activity) => {\n      const date = activity.date;\n      const hoursWorked = parseFloat(activity.activity); // Assume activity contains hours worked\n\n      if (!grouped[date]) grouped[date] = {};\n\n      // Aggregate total hours worked per user per date\n      if (!grouped[date][activity.user]) {\n        grouped[date][activity.user] = 0;\n      }\n      grouped[date][activity.user] += hoursWorked;\n      return grouped;\n    }, {});\n  };\n  const groupedActivities = groupActivitiesByDate(activities); // Group the activities by date\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedMonth(new Date(selectedMonth.setMonth(selectedMonth.getMonth() - 1))),\n        children: \"\\xD6nceki Ay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: format(selectedMonth, \"MMMM yyyy\", {\n          locale: tr\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedMonth(new Date(selectedMonth.setMonth(selectedMonth.getMonth() + 1))),\n        children: \"Sonraki Ay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"calendar-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0130sim/G\\xFCn\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), Array.from({\n              length: daysInMonth\n            }, (_, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: i + 1\n            }, i + 1, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [user.firstName, \" \", user.lastName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), \" \", Array.from({\n              length: daysInMonth\n            }, (_, i) => {\n              const day = formatDate(new Date(selectedMonth.getFullYear(), selectedMonth.getMonth(), i + 1));\n              const userActivities = groupedActivities[day] ? groupedActivities[day][user.id] || 0 // Assuming user.id is unique\n              : 0; // Get total hours worked for this day and user\n\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: userActivities > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"activity-box\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [userActivities, \" saat\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"tooltip\",\n                      children: activities.filter(activity => activity.user === user.id && activity.date === day).map((activity, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [activity.activity, \" saat - \", activity.date]\n                      }, idx, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 95,\n                        columnNumber: 35\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"\\u2013\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 27\n                  }, this) // No activity for this day\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 23\n                }, this)\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this);\n            })]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PuantageTable, \"Tzgb1M71tM979dZMkL7F/J9uWm4=\");\n_c = PuantageTable;\nexport default PuantageTable;\nvar _c;\n$RefreshReg$(_c, \"PuantageTable\");","map":{"version":3,"names":["React","format","getDaysInMonth","tr","jsxDEV","_jsxDEV","PuantageTable","activities","users","_s","selectedMonth","setSelectedMonth","useState","Date","daysInMonth","formatDate","date","groupActivitiesByDate","reduce","grouped","activity","hoursWorked","parseFloat","user","groupedActivities","className","children","onClick","setMonth","getMonth","fileName","_jsxFileName","lineNumber","columnNumber","locale","Array","from","length","_","i","map","firstName","lastName","day","getFullYear","userActivities","id","filter","idx","_c","$RefreshReg$"],"sources":["C:/Users/yigit/IdeaProjects/AdayBilgi_CS319_3/BTO_Management/319_Frontend/src/common/PuantageTable.js"],"sourcesContent":["import React from \"react\";\r\nimport { format, getDaysInMonth } from \"date-fns\";\r\nimport { tr } from \"date-fns/locale\"; // Import Turkish locale\r\nimport \"./PuantageTable.css\"; // Add custom styles\r\n\r\nconst PuantageTable = ({ activities, users }) => {\r\n  const [selectedMonth, setSelectedMonth] = React.useState(new Date()); // Current month\r\n\r\n  const daysInMonth = getDaysInMonth(selectedMonth); // Get total days in the month\r\n  const formatDate = (date) => format(date, \"yyyy-MM-dd\"); // Format date to compare\r\n\r\n  // Function to group activities by date and sum hours worked\r\n  const groupActivitiesByDate = (activities) => {\r\n    return activities.reduce((grouped, activity) => {\r\n      const date = activity.date;\r\n      const hoursWorked = parseFloat(activity.activity); // Assume activity contains hours worked\r\n\r\n      if (!grouped[date]) grouped[date] = {};\r\n\r\n      // Aggregate total hours worked per user per date\r\n      if (!grouped[date][activity.user]) {\r\n        grouped[date][activity.user] = 0;\r\n      }\r\n      grouped[date][activity.user] += hoursWorked;\r\n\r\n      return grouped;\r\n    }, {});\r\n  };\r\n\r\n  const groupedActivities = groupActivitiesByDate(activities); // Group the activities by date\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      {/* Month Selector */}\r\n      <div className=\"month-selector\">\r\n        <button\r\n          onClick={() =>\r\n            setSelectedMonth(\r\n              new Date(selectedMonth.setMonth(selectedMonth.getMonth() - 1))\r\n            )\r\n          }\r\n        >\r\n          Ã–nceki Ay\r\n        </button>\r\n        <span>{format(selectedMonth, \"MMMM yyyy\", { locale: tr })}</span>\r\n        <button\r\n          onClick={() =>\r\n            setSelectedMonth(\r\n              new Date(selectedMonth.setMonth(selectedMonth.getMonth() + 1))\r\n            )\r\n          }\r\n        >\r\n          Sonraki Ay\r\n        </button>\r\n      </div>\r\n\r\n      {/* Table Wrapper with Horizontal Scroll */}\r\n      <div className=\"table-wrapper\">\r\n        <table className=\"calendar-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Ä°sim/GÃ¼n</th>\r\n              {Array.from({ length: daysInMonth }, (_, i) => (\r\n                <th key={i + 1}>{i + 1}</th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user.id}> {/* Ensure user has an 'id' */}\r\n                <td>{user.firstName} {user.lastName}</td> {/* Display full name */}\r\n                {Array.from({ length: daysInMonth }, (_, i) => {\r\n                  const day = formatDate(\r\n                    new Date(selectedMonth.getFullYear(), selectedMonth.getMonth(), i + 1)\r\n                  );\r\n                  const userActivities = groupedActivities[day]\r\n                    ? groupedActivities[day][user.id] || 0 // Assuming user.id is unique\r\n                    : 0; // Get total hours worked for this day and user\r\n\r\n                  return (\r\n                    <td key={i}>\r\n                      <div>\r\n                        {/* Display the total hours worked for the day */}\r\n                        {userActivities > 0 ? (\r\n                          <div className=\"activity-box\">\r\n                            <span>{userActivities} saat</span>\r\n                            <div className=\"tooltip\">\r\n                              {/* Add more details about the activity if needed */}\r\n                              {activities\r\n                                .filter(\r\n                                  (activity) =>\r\n                                    activity.user === user.id && activity.date === day\r\n                                )\r\n                                .map((activity, idx) => (\r\n                                  <div key={idx}>\r\n                                    {activity.activity} saat - {activity.date}\r\n                                  </div>\r\n                                ))}\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <span>â€“</span> // No activity for this day\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PuantageTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,cAAc,QAAQ,UAAU;AACjD,SAASC,EAAE,QAAQ,iBAAiB,CAAC,CAAC;AACtC,OAAO,qBAAqB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,UAAU;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEtE,MAAMC,WAAW,GAAGZ,cAAc,CAACQ,aAAa,CAAC,CAAC,CAAC;EACnD,MAAMK,UAAU,GAAIC,IAAI,IAAKf,MAAM,CAACe,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;;EAEzD;EACA,MAAMC,qBAAqB,GAAIV,UAAU,IAAK;IAC5C,OAAOA,UAAU,CAACW,MAAM,CAAC,CAACC,OAAO,EAAEC,QAAQ,KAAK;MAC9C,MAAMJ,IAAI,GAAGI,QAAQ,CAACJ,IAAI;MAC1B,MAAMK,WAAW,GAAGC,UAAU,CAACF,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC;;MAEnD,IAAI,CAACD,OAAO,CAACH,IAAI,CAAC,EAAEG,OAAO,CAACH,IAAI,CAAC,GAAG,CAAC,CAAC;;MAEtC;MACA,IAAI,CAACG,OAAO,CAACH,IAAI,CAAC,CAACI,QAAQ,CAACG,IAAI,CAAC,EAAE;QACjCJ,OAAO,CAACH,IAAI,CAAC,CAACI,QAAQ,CAACG,IAAI,CAAC,GAAG,CAAC;MAClC;MACAJ,OAAO,CAACH,IAAI,CAAC,CAACI,QAAQ,CAACG,IAAI,CAAC,IAAIF,WAAW;MAE3C,OAAOF,OAAO;IAChB,CAAC,EAAE,CAAC,CAAC,CAAC;EACR,CAAC;EAED,MAAMK,iBAAiB,GAAGP,qBAAqB,CAACV,UAAU,CAAC,CAAC,CAAC;;EAE7D,oBACEF,OAAA;IAAKoB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAEjCrB,OAAA;MAAKoB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BrB,OAAA;QACEsB,OAAO,EAAEA,CAAA,KACPhB,gBAAgB,CACd,IAAIE,IAAI,CAACH,aAAa,CAACkB,QAAQ,CAAClB,aAAa,CAACmB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAC/D,CACD;QAAAH,QAAA,EACF;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT5B,OAAA;QAAAqB,QAAA,EAAOzB,MAAM,CAACS,aAAa,EAAE,WAAW,EAAE;UAAEwB,MAAM,EAAE/B;QAAG,CAAC;MAAC;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjE5B,OAAA;QACEsB,OAAO,EAAEA,CAAA,KACPhB,gBAAgB,CACd,IAAIE,IAAI,CAACH,aAAa,CAACkB,QAAQ,CAAClB,aAAa,CAACmB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAC/D,CACD;QAAAH,QAAA,EACF;MAED;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN5B,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BrB,OAAA;QAAOoB,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC/BrB,OAAA;UAAAqB,QAAA,eACErB,OAAA;YAAAqB,QAAA,gBACErB,OAAA;cAAAqB,QAAA,EAAI;YAAQ;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EAChBE,KAAK,CAACC,IAAI,CAAC;cAAEC,MAAM,EAAEvB;YAAY,CAAC,EAAE,CAACwB,CAAC,EAAEC,CAAC,kBACxClC,OAAA;cAAAqB,QAAA,EAAiBa,CAAC,GAAG;YAAC,GAAbA,CAAC,GAAG,CAAC;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAC5B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR5B,OAAA;UAAAqB,QAAA,EACGlB,KAAK,CAACgC,GAAG,CAAEjB,IAAI,iBACdlB,OAAA;YAAAqB,QAAA,GAAkB,GAAC,eACjBrB,OAAA;cAAAqB,QAAA,GAAKH,IAAI,CAACkB,SAAS,EAAC,GAAC,EAAClB,IAAI,CAACmB,QAAQ;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,KAAC,EACzCE,KAAK,CAACC,IAAI,CAAC;cAAEC,MAAM,EAAEvB;YAAY,CAAC,EAAE,CAACwB,CAAC,EAAEC,CAAC,KAAK;cAC7C,MAAMI,GAAG,GAAG5B,UAAU,CACpB,IAAIF,IAAI,CAACH,aAAa,CAACkC,WAAW,CAAC,CAAC,EAAElC,aAAa,CAACmB,QAAQ,CAAC,CAAC,EAAEU,CAAC,GAAG,CAAC,CACvE,CAAC;cACD,MAAMM,cAAc,GAAGrB,iBAAiB,CAACmB,GAAG,CAAC,GACzCnB,iBAAiB,CAACmB,GAAG,CAAC,CAACpB,IAAI,CAACuB,EAAE,CAAC,IAAI,CAAC,CAAC;cAAA,EACrC,CAAC,CAAC,CAAC;;cAEP,oBACEzC,OAAA;gBAAAqB,QAAA,eACErB,OAAA;kBAAAqB,QAAA,EAEGmB,cAAc,GAAG,CAAC,gBACjBxC,OAAA;oBAAKoB,SAAS,EAAC,cAAc;oBAAAC,QAAA,gBAC3BrB,OAAA;sBAAAqB,QAAA,GAAOmB,cAAc,EAAC,OAAK;oBAAA;sBAAAf,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAM,CAAC,eAClC5B,OAAA;sBAAKoB,SAAS,EAAC,SAAS;sBAAAC,QAAA,EAErBnB,UAAU,CACRwC,MAAM,CACJ3B,QAAQ,IACPA,QAAQ,CAACG,IAAI,KAAKA,IAAI,CAACuB,EAAE,IAAI1B,QAAQ,CAACJ,IAAI,KAAK2B,GACnD,CAAC,CACAH,GAAG,CAAC,CAACpB,QAAQ,EAAE4B,GAAG,kBACjB3C,OAAA;wBAAAqB,QAAA,GACGN,QAAQ,CAACA,QAAQ,EAAC,UAAQ,EAACA,QAAQ,CAACJ,IAAI;sBAAA,GADjCgC,GAAG;wBAAAlB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAER,CACN;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACD,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH,CAAC,gBAEN5B,OAAA;oBAAAqB,QAAA,EAAM;kBAAC;oBAAAI,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAM,CAAC,CAAC;gBAChB;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACE;cAAC,GAvBCM,CAAC;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAwBN,CAAC;YAET,CAAC,CAAC;UAAA,GArCKV,IAAI,CAACuB,EAAE;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAsCZ,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACxB,EAAA,CA7GIH,aAAa;AAAA2C,EAAA,GAAb3C,aAAa;AA+GnB,eAAeA,aAAa;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}